/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./contexts/CreditIntelligenceContext.tsx":
/*!************************************************!*\
  !*** ./contexts/CreditIntelligenceContext.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreditIntelligenceProvider: () => (/* binding */ CreditIntelligenceProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useCreditIntelligence: () => (/* binding */ useCreditIntelligence)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst CreditIntelligenceContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst CreditIntelligenceProvider = ({ children })=>{\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [analytics, setAnalytics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [achievements, setAchievements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [activeProofs, setActiveProofs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [privacyMode, setPrivacyModeState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [connectedAddress, setConnectedAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Mock data for demonstration - in real implementation, this would come from the service\n    // Load data from API when address is connected\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (connectedAddress) {\n            loadProfileData(connectedAddress);\n        } else {\n            setProfile(null);\n            setAnalytics(null);\n            setAchievements([]);\n            setActiveProofs([]);\n        }\n    }, [\n        connectedAddress\n    ]);\n    const loadProfileData = async (address)=>{\n        setLoading(true);\n        try {\n            // Load profile from API\n            const profileResponse = await fetch(`http://localhost:3001/api/credit-profile/${address}`);\n            if (profileResponse.ok) {\n                const profileData = await profileResponse.json();\n                setProfile(profileData);\n                setAchievements(profileData.achievements || []);\n            }\n            // Load analytics from API\n            const analyticsResponse = await fetch(`http://localhost:3001/api/analytics/${address}?timeframe=30d`);\n            if (analyticsResponse.ok) {\n                const analyticsData = await analyticsResponse.json();\n                setAnalytics(analyticsData);\n            }\n        } catch (error) {\n            console.error(\"Error loading profile data:\", error);\n            setError(\"Failed to load profile data\");\n        } finally{\n            setLoading(false);\n        }\n    };\n    const connectWallet = async (address)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            setConnectedAddress(address);\n        // In real implementation, fetch actual data from the service\n        // const profile = await creditIntelligenceService.getCreditProfile(address);\n        // setProfile(profile);\n        } catch (err) {\n            setError(\"Failed to connect wallet and load profile\");\n            console.error(\"Wallet connection error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const disconnectWallet = ()=>{\n        setConnectedAddress(null);\n        setProfile(null);\n        setAnalytics(null);\n        setAchievements([]);\n        setActiveProofs([]);\n        setError(null);\n    };\n    const refreshProfile = async ()=>{\n        if (!connectedAddress) return;\n        setLoading(true);\n        try {\n            const response = await fetch(`http://localhost:3001/api/credit-profile/${connectedAddress}`);\n            if (response.ok) {\n                const profileData = await response.json();\n                setProfile(profileData);\n                setAchievements(profileData.achievements || []);\n            } else {\n                setError(\"Failed to refresh profile\");\n            }\n        } catch (err) {\n            setError(\"Failed to refresh profile\");\n            console.error(\"Profile refresh error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const refreshAnalytics = async (timeframe = \"30d\")=>{\n        if (!connectedAddress) return;\n        setLoading(true);\n        try {\n            const response = await fetch(`http://localhost:3001/api/analytics/${connectedAddress}?timeframe=${timeframe}`);\n            if (response.ok) {\n                const analyticsData = await response.json();\n                setAnalytics(analyticsData);\n            } else {\n                setError(\"Failed to refresh analytics\");\n            }\n        } catch (err) {\n            setError(\"Failed to refresh analytics\");\n            console.error(\"Analytics refresh error:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const refreshAchievements = async ()=>{\n        if (!connectedAddress) return;\n        try {\n            // In real implementation:\n            // const achievements = await creditIntelligenceService.getAchievements(connectedAddress);\n            // setAchievements(achievements);\n            // For now, just refresh the mock data\n            setAchievements(mockAchievements);\n        } catch (err) {\n            setError(\"Failed to refresh achievements\");\n            console.error(\"Achievements refresh error:\", err);\n        }\n    };\n    const refreshProofs = async ()=>{\n        if (!connectedAddress) return;\n        try {\n            // In real implementation:\n            // const proofs = await creditIntelligenceService.getActiveProofs(connectedAddress);\n            // setActiveProofs(proofs);\n            // For now, use empty array\n            setActiveProofs([]);\n        } catch (err) {\n            setError(\"Failed to refresh proofs\");\n            console.error(\"Proofs refresh error:\", err);\n        }\n    };\n    const setPrivacyMode = (enabled)=>{\n        setPrivacyModeState(enabled);\n    // In real implementation, this might also update server-side preferences\n    };\n    const generateProof = async (type, options)=>{\n        if (!connectedAddress) return null;\n        setLoading(true);\n        try {\n            // In real implementation:\n            // const proof = await creditIntelligenceService.generateZKProof(connectedAddress, type, options);\n            // For now, create a mock proof\n            const mockProof = {\n                id: Date.now().toString(),\n                type,\n                status: \"ready\",\n                threshold: type === \"threshold\" ? options.threshold : undefined,\n                dimensions: type === \"selective\" ? options.dimensions : undefined,\n                proof: `zk${Math.random().toString(36).substring(2)}${Date.now()}`,\n                timestamp: Date.now(),\n                expiresAt: Date.now() + 86400000 // 24 hours\n            };\n            setActiveProofs((prev)=>[\n                    mockProof,\n                    ...prev\n                ]);\n            return mockProof;\n        } catch (err) {\n            setError(\"Failed to generate proof\");\n            console.error(\"Proof generation error:\", err);\n            return null;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const claimAchievement = async (achievementId)=>{\n        if (!connectedAddress) return false;\n        try {\n            // In real implementation:\n            // const success = await creditIntelligenceService.claimAchievement(connectedAddress, achievementId);\n            // For now, just mark as unlocked\n            setAchievements((prev)=>prev.map((achievement)=>achievement.id === achievementId ? {\n                        ...achievement,\n                        unlocked: true,\n                        unlockedAt: Date.now()\n                    } : achievement));\n            return true;\n        } catch (err) {\n            setError(\"Failed to claim achievement\");\n            console.error(\"Achievement claim error:\", err);\n            return false;\n        }\n    };\n    const exportData = async (options)=>{\n        if (!connectedAddress) return null;\n        try {\n            // In real implementation:\n            // return await creditIntelligenceService.exportAnalytics(connectedAddress, options);\n            // For now, create a mock export\n            const exportData = {\n                profile: privacyMode ? null : profile,\n                analytics: privacyMode ? null : analytics,\n                achievements,\n                timestamp: new Date().toISOString(),\n                privacyMode\n            };\n            return new Blob([\n                JSON.stringify(exportData, null, 2)\n            ], {\n                type: \"application/json\"\n            });\n        } catch (err) {\n            setError(\"Failed to export data\");\n            console.error(\"Data export error:\", err);\n            return null;\n        }\n    };\n    const value = {\n        // State\n        profile,\n        analytics,\n        achievements,\n        activeProofs,\n        loading,\n        error,\n        // User preferences\n        privacyMode,\n        connectedAddress,\n        // Actions\n        connectWallet,\n        disconnectWallet,\n        refreshProfile,\n        refreshAnalytics,\n        refreshAchievements,\n        refreshProofs,\n        setPrivacyMode,\n        generateProof,\n        claimAchievement,\n        exportData\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CreditIntelligenceContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"E:\\\\BlockCreditScore\\\\frontend\\\\contexts\\\\CreditIntelligenceContext.tsx\",\n        lineNumber: 372,\n        columnNumber: 5\n    }, undefined);\n};\nconst useCreditIntelligence = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CreditIntelligenceContext);\n    if (context === undefined) {\n        throw new Error(\"useCreditIntelligence must be used within a CreditIntelligenceProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CreditIntelligenceContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/CreditIntelligenceContext.tsx\n");

/***/ }),

/***/ "./contexts/DeploymentContext.tsx":
/*!****************************************!*\
  !*** ./contexts/DeploymentContext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeploymentProvider: () => (/* binding */ DeploymentProvider),\n/* harmony export */   useDeployment: () => (/* binding */ useDeployment)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst DeploymentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useDeployment = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DeploymentContext);\n    if (!context) {\n        throw new Error(\"useDeployment must be used within a DeploymentProvider\");\n    }\n    return context;\n};\nconst DeploymentProvider = ({ children })=>{\n    const [envConfig, setEnvConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        GOERLI_RPC_URL: \"\",\n        SEPOLIA_RPC_URL: \"\",\n        PRIVATE_KEY: \"\",\n        ETHERSCAN_API_KEY: \"\",\n        GAS_PRICE_GWEI: \"20\",\n        GAS_LIMIT: \"8000000\"\n    });\n    const [deployments, setDeployments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [monitoringData, setMonitoringData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isConnected: false,\n        latestBlock: 0,\n        gasPrice: \"0\",\n        balance: \"0\",\n        lastUpdate: 0\n    });\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [logs, setLogs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const addLog = (log)=>{\n        const timestamp = new Date().toLocaleTimeString();\n        setLogs((prev)=>[\n                ...prev,\n                `[${timestamp}] ${log}`\n            ]);\n    };\n    const clearLogs = ()=>{\n        setLogs([]);\n    };\n    // Load saved config from localStorage and .env file\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadConfiguration = async ()=>{\n            try {\n                // First try to load from .env file via API\n                const response = await fetch(\"/api/load-env\");\n                if (response.ok) {\n                    const envConfig = await response.json();\n                    setEnvConfig(envConfig);\n                    console.log(\"✅ Configuration loaded from .env file\");\n                } else {\n                    // Fallback to localStorage\n                    const savedConfig = localStorage.getItem(\"cryptovault-env-config\");\n                    if (savedConfig) {\n                        setEnvConfig(JSON.parse(savedConfig));\n                        console.log(\"✅ Configuration loaded from localStorage\");\n                    }\n                }\n            } catch (error) {\n                console.error(\"Failed to load env config from API, trying localStorage:\", error);\n                // Fallback to localStorage\n                const savedConfig = localStorage.getItem(\"cryptovault-env-config\");\n                if (savedConfig) {\n                    try {\n                        setEnvConfig(JSON.parse(savedConfig));\n                        console.log(\"✅ Configuration loaded from localStorage (fallback)\");\n                    } catch (parseError) {\n                        console.error(\"Failed to parse localStorage config:\", parseError);\n                    }\n                }\n            }\n        };\n        const loadDeployments = ()=>{\n            const savedDeployments = localStorage.getItem(\"cryptovault-deployments\");\n            if (savedDeployments) {\n                try {\n                    setDeployments(JSON.parse(savedDeployments));\n                } catch (error) {\n                    console.error(\"Failed to load saved deployments:\", error);\n                }\n            }\n        };\n        loadConfiguration();\n        loadDeployments();\n    }, []);\n    // Save config to localStorage when it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"cryptovault-env-config\", JSON.stringify(envConfig));\n    }, [\n        envConfig\n    ]);\n    // Save deployments to localStorage when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        localStorage.setItem(\"cryptovault-deployments\", JSON.stringify(deployments));\n    }, [\n        deployments\n    ]);\n    const value = {\n        envConfig,\n        setEnvConfig,\n        deployments,\n        setDeployments,\n        monitoringData,\n        setMonitoringData,\n        isLoading,\n        setIsLoading,\n        logs,\n        addLog,\n        clearLogs\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DeploymentContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"E:\\\\BlockCreditScore\\\\frontend\\\\contexts\\\\DeploymentContext.tsx\",\n        lineNumber: 157,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/DeploymentContext.tsx\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _contexts_DeploymentContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../contexts/DeploymentContext */ \"./contexts/DeploymentContext.tsx\");\n/* harmony import */ var _contexts_CreditIntelligenceContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../contexts/CreditIntelligenceContext */ \"./contexts/CreditIntelligenceContext.tsx\");\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setMounted(true);\n    }, []);\n    if (!mounted) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_DeploymentContext__WEBPACK_IMPORTED_MODULE_3__.DeploymentProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_CreditIntelligenceContext__WEBPACK_IMPORTED_MODULE_4__.CreditIntelligenceProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"E:\\\\BlockCreditScore\\\\frontend\\\\pages\\\\_app.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"E:\\\\BlockCreditScore\\\\frontend\\\\pages\\\\_app.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\BlockCreditScore\\\\frontend\\\\pages\\\\_app.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQStCO0FBRWE7QUFDdUI7QUFDZ0I7QUFFcEUsU0FBU0ksSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBWTtJQUM1RCxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR1IsK0NBQVFBLENBQUM7SUFFdkNDLGdEQUFTQSxDQUFDO1FBQ1JPLFdBQVc7SUFDYixHQUFHLEVBQUU7SUFFTCxJQUFJLENBQUNELFNBQVM7UUFDWixPQUFPO0lBQ1Q7SUFFQSxxQkFDRSw4REFBQ0wsMkVBQWtCQTtrQkFDakIsNEVBQUNDLDJGQUEwQkE7c0JBQ3pCLDRFQUFDRTtnQkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7O0FBSWhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3J5cHRvdmF1bHQtZGVwbG95bWVudC1kYXNoYm9hcmQvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRGVwbG95bWVudFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dHMvRGVwbG95bWVudENvbnRleHQnO1xuaW1wb3J0IHsgQ3JlZGl0SW50ZWxsaWdlbmNlUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0cy9DcmVkaXRJbnRlbGxpZ2VuY2VDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcbiAgY29uc3QgW21vdW50ZWQsIHNldE1vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0TW91bnRlZCh0cnVlKTtcbiAgfSwgW10pO1xuXG4gIGlmICghbW91bnRlZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RGVwbG95bWVudFByb3ZpZGVyPlxuICAgICAgPENyZWRpdEludGVsbGlnZW5jZVByb3ZpZGVyPlxuICAgICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICA8L0NyZWRpdEludGVsbGlnZW5jZVByb3ZpZGVyPlxuICAgIDwvRGVwbG95bWVudFByb3ZpZGVyPlxuICApO1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkRlcGxveW1lbnRQcm92aWRlciIsIkNyZWRpdEludGVsbGlnZW5jZVByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwibW91bnRlZCIsInNldE1vdW50ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.tsx"));
module.exports = __webpack_exports__;

})();